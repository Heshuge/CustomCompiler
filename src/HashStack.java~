import java.util.Stack;

public class HashStack {
	//declare new stack
	private static Stack<HashTable> symbolHashStack = new Stack<HashTable>();
	//set up scope count
	private static int scopes = 1;

	//create first hashstack table
	public static void createGlobal() {
		System.out.println("Creating symbolHashStack : Scope => GLOBAL");
		symbolHashStack.push(new HashTable("GLOBAL"));
	}

	public static void createFunction(String functionName) {
		System.out.println("Creating symbolHashStack : Scope => " + functionName);
		symbolHashStack.push(new HashTable(functionName));
	}

	//public static void createBlock() {
		//System.out.println("Creating symbolTableObject : Scope => BLOCK " + Integer.toString(blockScopeCount));
	//	symbolTableStack.push(new SymbolTableObject("BLOCK " + Integer.toString(blockScopeCount++)));
	//}

	public static void addSymbol(String type_name, String var_name, String string_value) {
		Symbol tempSymbol = symbolHashStack.pop();
		tempSymbol.addSymbol(type_name, var_name, string_value);
		symbolHashStack.push(tempHashTable);
	}

	public static void showHashTable() {
		Symbol tempSymbol = symbolHashStack.pop();
		tempSymbol.printHashTable();
		symbolHashStack.push(tempSymbol);
	}

	public static void popHashTable() {
		Symbol tempSymbol = symbolHashStack.pop();
	}
}
